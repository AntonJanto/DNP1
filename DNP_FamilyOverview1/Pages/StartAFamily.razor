@page "/startafamily"
@attribute [Authorize(Policy = "Create")]

@using DNP_FamilyOverview1.Models.Families
@using DNP_FamilyOverview1.Data.Families

@inject IFamilyService FamilyService

<h2>Start a Family</h2>
<div class="start-family-page">
    <EditForm Model="@newFamily" OnValidSubmit="@AddNewFamily">
        <div class="d-flex flex-column align-items-center">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <p style="color:green;">@message</p>
            <p style="color:red;">@error</p>
            <div class="form-group">
                <label for="streetname">
                    Street name:
                </label>
                <InputText class="form-control" id="streetname" placeholder="Kattesund" @bind-Value="@newFamily.StreetName" />
            </div>
            <div class="form-group">
                <label for="housenum">
                    House Number:
                </label>
                <InputNumber class="form-control" id="housenum" placeholder=12 @bind-Value="@newFamily.HouseNumber" />
            </div>
        </div>

        @if (adultsInFamily > 0)
        {
            <AddAdult AdultNum="1" @bind-TheAdult="adult1" @bind-AdultFormContext="adult1Context" />

            if (adultsInFamily > 1)
            {
                <AddAdult AdultNum="2" @bind-TheAdult="adult2" @bind-AdultFormContext="adult2Context" />
            }
        }

        <div class="d-flex justify-content-center">
            @if (adultsInFamily < 2)
            {
                <icon class="oi oi-plus adult-counter" @onclick="AddAdult" />
            }
            @if (adultsInFamily > 0)
            {
                <icon class="oi oi-minus adult-counter" @onclick="DropAdult" />
            }

        </div>

        <button class="btn btn-primary my-4" type="submit">Create</button>
    </EditForm>
</div>

@code {
    //Family setup
    private int adultsInFamily = 0;
    private Family newFamily = new Family();

    //adult 1
    private Adult adult1 = new Adult();
    private EditContext adult1Context;

    //adult 2
    private Adult adult2 = new Adult();
    private EditContext adult2Context;

    private string error;
    private string message;

    //Methods
    protected override void OnInitialized()
    {
        adult1Context = new EditContext(adult1);
        adult2Context = new EditContext(adult2);
        base.OnInitialized();
    }

    private void AddAdult() => adultsInFamily++;

    private void DropAdult() => adultsInFamily--;

    private void AddNewFamily()
    {
        message = "";
        error = "";
        try
        {
            if (adultsInFamily == 0)
            {
                if (FamilyService.AddFamily(newFamily))
                    message = "Family  created";
            }
            //if only one adult is selected add adult 1 to the existing family
            else if (adultsInFamily == 1)
            {
                var ad1valid = adult1Context.Validate();
                if (ad1valid)
                {
                    if (FamilyService.AddFamily(newFamily))
                    {
                        message = "Family  created";
                        FamilyService.AddAdultToFamily(adult1, newFamily);
                    }
                }
            }
            else if (adultsInFamily == 2)
            {
                var ad1valid = adult1Context.Validate();
                var ad2valid = adult2Context.Validate();
                if (ad1valid && ad2valid)
                {
                    if (FamilyService.AddFamily(newFamily))
                    {
                        message = "Family  created";
                        FamilyService.AddAdultToFamily(adult1, newFamily);
                        FamilyService.AddAdultToFamily(adult2, newFamily);
                    }
                }
            }
        }
        catch (Exception e)
        {
            error = e.Message;

        }
    }
}
