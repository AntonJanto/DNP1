@page "/login"
@namespace DNP_FamilyOverview1.LoginComponent
@using DNP_FamilyOverview1.Data.Authentication.Impl
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="container-fluid">
            <div class="row form-group mt-3">
                <div class="col-6 col-md-5 d-flex justify-content-end">
                    <label for="username">
                        Username:
                    </label>
                </div>
                <div class="col-6 col-md-7">
                    <input type="text" class="rounded" id="username" @bind-value="username" />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-6 col-md-5 d-flex justify-content-end">
                    <label for="password">
                        Password:
                    </label>
                </div>
                <div class="col-6 col-md-7">
                    <input type="password" class="rounded" id="password" @bind-value="password" />
                </div>
            </div>
            <div class="d-flex flex-column align-items-center justify-content-between">
                <span style="color:red">@errorMessage</span>
                <button class="btn btn-primary" @onclick="PerformLogin">Login</button>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}
